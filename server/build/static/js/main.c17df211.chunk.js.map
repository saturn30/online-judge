{"version":3,"sources":["lib/key.js","Component/Layout/Header.js","Component/Layout/Footer.js","Component/Layout/index.js","Page/Main/index.js","Page/MyPage/index.js","Component/Submit/index.js","Page/Problem/index.js","Page/ProblemList/index.js","Page/Login/index.js","Page/Join/index.js","Page/ProblemCreate/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","serverIP","Header","useState","toggleBugger","setToggleBugger","useCookies","cookies","removeCookie","className","to","style","color","role","onClick","aria-hidden","id","token","fontWeight","Footer","marginTop","href","index","props","children","SimpleSwiper","params","pagination","el","clickable","MyPage","data","setData","useEffect","a","axios","get","headers","Authorization","console","log","fetch","message","total_submit","solved_arr","length","wrong_arr","Math","floor","margin","map","v","i","key","Submit","ProblemId","code","setCode","onclickSubmit","post","window","location","reload","scrollTo","alert","Fragment","mode","theme","value","onChange","text","name","editorProps","$blockScrolling","showPrintMargin","width","marginBottom","Problem","match","submitData","setSubmitData","fetchData","printInfo","title","content","split","trim","Array","isArray","solved","forEach","isSolved","date","Date","createdAt","slice","toggle","done","getFullYear","getMonth","getDate","getHours","getMinutes","colSpan","Submit_results","judge_v","judge_i","result","time","limit","problem_info","input_info","output_info","Problem_examples","input_example","replace","output_example","printExample","ProblemList","page","setPage","count","rows","total_solved","User_problems","aria-label","arr","push","pageButton","Login","setId","pw","setPw","setCookie","submit","res","document","type","e","target","Join","ID","setID","pwCheck","setPwCheck","fontSize","placeholder","ProblemCreate","setMessage","example_data","input","output","judge_data","setSubminData","checkadmin","App","exact","path","component","Main","Boolean","hostname","ReactDOM","render","StrictMode","CookiesProvider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"iLAAAA,EAAOC,QAAQC,SAAW,uB,6PCmEXC,EA/DA,WAAO,IAAD,EACqBC,oBAAS,GAD9B,mBACZC,EADY,KACEC,EADF,OAEeC,YAAW,CAAC,UAF3B,mBAEZC,EAFY,KAEDC,EAFC,KAGnB,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,MAAO,UAA7B,oBAIF,yBAAKC,KAAK,SAASJ,UAAU,gBAAgBK,QAAS,kBAAMT,GAAiBD,KAC3E,0BAAMW,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAGtB,yBAAKC,GAAG,UAAUP,UAAWL,EAAe,wBAA0B,eACpE,yBAAKK,UAAU,gBACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,eAAeC,MAAO,CAAEC,MAAO,UAA9D,6BAKF,yBAAKH,UAAU,eACb,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,UAAUC,MAAO,CAAEC,MAAO,UAAzD,uBAIF,yBAAKH,UAAU,iBAGjB,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACXF,EAAQU,MAeR,yBAAKR,UAAU,oBAAoBK,QAAS,kBAAMN,EAAa,WAA/D,4BAdA,6BACE,yBAAKC,UAAU,qBACb,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,QAAQC,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA5E,6BAKF,yBAAKT,UAAU,mBACb,kBAAC,IAAD,CAAMA,UAAU,YAAYC,GAAG,UAA/B,8BCnCLS,EAZA,WACb,OACE,4BAAQV,UAAU,SAASE,MAAO,CAACS,UAAW,KAC5C,yBAAKX,UAAU,6BACb,kCACM,uBAAGY,KAAM,6BAAT,cCUCC,G,MAZD,SAACC,GACX,OACI,yBAAKd,UAAU,QACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACVc,EAAMC,UAEX,kBAAC,EAAD,S,iBCLNC,G,YAAe,WACnB,IAAMC,EAAS,CACbC,WAAY,CACVC,GAAI,qBACJC,WAAW,IAIf,OACE,kBAAC,IAAWH,EACV,yBAAKjB,UAAU,cACb,0BAAMA,UAAU,QAAQE,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA7D,6EAIF,yBAAKT,UAAU,cACb,0BAAMA,UAAU,QAAQE,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA7D,6EAIF,yBAAKT,UAAU,cACb,0BAAMA,UAAU,QAAQE,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA7D,gFAQO,aACb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKT,UAAU,WACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,yBAAf,wBACA,yBAAKA,UAAU,yBAAf,wBACA,yBAAKA,UAAU,yBAAf,6B,8CCyCGqB,G,MA7EA,WAAO,IAAD,EACDxB,YAAW,CAAC,UAAvBC,EADY,sBAEKJ,mBAAS,IAFd,mBAEZ4B,EAFY,KAENC,EAFM,KAWnB,OARAC,qBAAU,YACG,uCAAG,4BAAAC,EAAA,sEACQC,IAAMC,IAAInC,WAAW,UAAW,CAAEoC,QAAS,CAAEC,cAAe/B,EAAQU,SAD5E,OACNc,EADM,OACwFA,KACpGQ,QAAQC,IAAIT,GACZC,EAAQD,GAHI,2CAAH,qDAKXU,KACC,IACkB,YAAjBV,EAAKW,QAEL,kBAAC,EAAD,KACE,yBAAKjC,UAAU,yEACb,uBAAGA,UAAU,0BAA0BE,MAAO,CAAES,UAAW,MAA3D,8DAQN,kBAAC,EAAD,KACE,yBAAKX,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC3C,yBAAKX,UAAU,yEACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,6BACA,uBAAGA,UAAU,SAASsB,EAAKY,gBAG/B,yBAAKlC,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,6BACA,uBAAGA,UAAU,SAASsB,EAAKa,WAAWC,UAG1C,yBAAKpC,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,4BACA,uBAAGA,UAAU,SAASsB,EAAKe,UAAUD,UAGzC,yBAAKpC,UAAU,gCACb,6BACE,uBAAGA,UAAU,WAAb,sBACA,uBAAGA,UAAU,SACVsB,EAAKY,aAAeI,KAAKC,MAAOjB,EAAKa,WAAWC,OAASd,EAAKY,aAAgB,KAAO,EADxF,SAON,yBAAKlC,UAAU,gBAAgBE,MAAO,CAAES,UAAW,KACjD,wDACA,uBAAGT,MAAO,CAAEsC,OAAQ,KACjBlB,EAAKa,WAAWM,KAAI,SAACC,EAAGC,GAAJ,OACjB,kBAAC,IAAD,CAAMC,IAAKD,EAAG1C,GAAI,YAAcyC,GAAG,0BAAOxC,MAAO,CAACC,MAAO,QAASM,WAAY,SAA3C,IAAuDiC,EAAvD,WAI3C,yBAAK1C,UAAU,gBAAgBE,MAAO,CAAES,UAAW,KACjD,wDACA,uBAAGT,MAAO,CAAEsC,OAAQ,KACjBlB,EAAKe,UAAUI,KAAI,SAACC,EAAGC,GAAJ,OAChB,kBAAC,IAAD,CAAMC,IAAKD,EAAG1C,GAAI,YAAcyC,GAAG,0BAAOxC,MAAO,CAACC,MAAO,MAAOM,WAAY,SAAzC,IAAqDiC,EAArD,gB,uCCrBtCG,G,YA3CA,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACRpD,mBAAS,sEADD,mBACzBqD,EADyB,KACnBC,EADmB,OAEdnD,YAAW,CAAC,UAAvBC,EAFyB,oBAI1BmD,EAAa,uCAAG,sBAAAxB,EAAA,sEACFC,IAAMwB,KACtB1D,WAAW,gBACX,CAAEuD,OAAMD,aACR,CAAElB,QAAS,CAAEC,cAAe/B,EAAQU,SAJlB,OAMH,YANG,OAMZc,MACN6B,OAAOC,SAASC,SAChBF,OAAOG,SAAS,EAAG,IAEnBC,MAAM,4DAVY,2CAAH,qDAcnB,OACE,kBAAC,IAAMC,SAAP,KACE,yBAAKxD,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC3C,yBAAKX,UAAU,sDACb,kBAAC,IAAD,CACEyD,KAAK,aACLC,MAAM,UACNC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAUb,EAAQa,IAC5BC,KAAK,mBACLC,YAAa,CAAEC,iBAAiB,GAChCC,iBAAiB,EACjB/D,MAAO,CAAEgE,MAAO,YAItB,yBAAKlE,UAAU,sBAAsBE,MAAO,CAAEiE,aAAc,KAC1D,yBAAKnE,UAAU,oBAAoBK,QAAS4C,GAA5C,gCCuJOmB,G,MA3LC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACL3E,mBAAS,IADJ,mBACtB4B,EADsB,KAChBC,EADgB,OAEX1B,YAAW,CAAC,UAAvBC,EAFsB,sBAGOJ,mBAAS,IAHhB,mBAGtB4E,EAHsB,KAGVC,EAHU,KAI7B/C,qBAAU,YACG,uCAAG,4BAAAC,EAAA,sEACYC,IAAMC,IAAInC,WAAW,YAAc6E,EAAMpD,OAAOV,IAD5D,OACNiE,EADM,OAEZjD,EAAQiD,EAAUlD,MAFN,2CAAH,qDAIXU,KACC,CAACqC,EAAMpD,OAAOV,KAEjBiB,qBAAU,YACG,uCAAG,4BAAAC,EAAA,sEACYC,IAAMwB,KAC5B1D,WAAW,yBACX,CAAEsD,UAAWuB,EAAMpD,OAAOV,IAC1B,CACEqB,QAAS,CAAEC,cAAe/B,EAAQU,SAL1B,OACNgE,EADM,OAQZ1C,QAAQC,IAAIyC,EAAUlD,MACtBiD,EAAcC,EAAUlD,MATZ,2CAAH,qDAWXU,KACC,IAEH,IAAMyC,EAAY,SAACC,EAAOC,GAAR,OAChB,yBAAK3E,UAAU,WACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAsB0E,GAClCC,GAAWA,EAAQC,MAAM,MAAMnC,KAAI,SAACC,EAAGC,GAAJ,OAAU,uBAAGC,IAAKD,GAAID,EAAEmC,eAsHpE,OACE,kBAAC,EAAD,KACE,6BAAS7E,UAAW,QAXP,WACf,IAAK8E,MAAMC,QAAQT,KAAgBA,EAAWlC,OAAQ,MAAO,UAC7D,IAAI4C,GAAS,EAIb,OAHAV,EAAWW,SAAQ,SAACvC,GACdA,EAAEsC,SAAQA,GAAS,MAElBA,EAAS,aAAe,YAKCE,IAC5B,yBAAKlF,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAASsB,EAAKoD,OAC5B,wBAAI1E,UAAU,YAAYsB,EAAKf,GAA/B,aA/FHuE,MAAMC,QAAQT,IAAgBA,EAAWlC,OAE5C,yBAAKpC,UAAU,UAAUE,MAAO,CAAES,UAAW,GAAIwD,aAAc,KAC7D,yBAAKnE,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,4BACA,2BAAOA,UAAU,qBAAqBE,MAAO,CAAEgE,MAAO,SACpD,+BACE,4BACE,wBAAIlE,UAAU,QAAd,gBACA,wBAAIA,UAAU,QAAd,gBACA,wBAAIA,UAAU,QAAd,4BACA,wBAAIA,UAAU,QAAd,8BAGJ,+BACGsE,EAAW7B,KAAI,SAACC,EAAGC,GAClB,IAAMwC,EAAO,IAAIC,KAAK1C,EAAE2C,WACxB,OACE,kBAAC,IAAM7B,SAAP,CAAgBZ,IAAKD,GACnB,wBACEtC,QAAS,kBACPkE,EAAc,GAAD,mBACRD,EAAWgB,MAAM,EAAG3C,IADZ,gBAEND,EAFM,CAEH6C,QAAS7C,EAAE6C,UAFR,YAGRjB,EAAWgB,MAAM3C,EAAI,QAI5B,4BAAKA,EAAE,GACP,4BACGD,EAAE8C,KAAO9C,EAAEsC,OACV,0BAAM9E,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA3C,kCAEA,0BAAMP,MAAO,CAAEC,MAAO,MAAOM,WAAY,SAAzC,kCAEF,0BAAMP,MAAO,CAAEC,MAAO,OAAQM,WAAY,SAA1C,4CAEF,4BAAKiC,EAAEK,KAAKX,QACZ,4BACG+C,EAAKM,cAAgB,IADxB,IAC8BN,EAAKO,WAAa,EADhD,IACoDP,EAAKQ,UADzD,MACuER,EAAKS,WAD5E,IAEGT,EAAKU,eAGTnD,EAAE6C,QACD,4BACE,wBAAIO,QAAS,GACX,6BACE,2BAAO9F,UAAU,QAAQE,MAAO,CAAES,UAAW,GAAIwD,aAAc,GAAID,MAAO,SACxE,+BACE,4BACE,wBAAIhE,MAAO,CAAEgE,MAAO,QAApB,wCACA,wBAAIhE,MAAO,CAAEgE,MAAO,QAApB,gBACA,wBAAIhE,MAAO,CAAEgE,MAAO,QAApB,kBAGJ,+BACGxB,EAAEqD,eAAetD,KAAI,SAACuD,EAASC,GAAV,OACpB,wBAAIrD,IAAKqD,GACP,4BAAKA,EAAU,EAAf,WACA,4BAAKD,EAAQE,QACb,4BAAsB,OAAjBF,EAAQG,KAAgBH,EAAQG,KAAO,MAAQ,uBA7DzB,yBAAKjG,MAAO,CAACS,UAAW,MAqGlF8D,EAAU,2BAAQnD,EAAK8E,MAAQ,OAC/B3B,EAAU,eAAMnD,EAAK+E,cACrB5B,EAAU,eAAMnD,EAAKgF,YACrB7B,EAAU,eAAMnD,EAAKiF,aACrBjF,EAAKkF,kBAAoBlF,EAAKkF,iBAAiB/D,KAAI,SAACC,EAAGC,GAAJ,OAjInC,SAACD,EAAGC,GACvB,OACE,yBAAK3C,UAAU,UAAUE,MAAO,CAAEiE,aAAc,IAAMvB,IAAKD,GACzD,yBAAK3C,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BAAyC2C,EAAI,GAC7C,iCACI,KADJ,IACWD,EAAE+D,cAAcC,QAAQ,MAAO,SAD1C,IACqD,KADrD,OAKJ,yBAAK1G,UAAU,sDACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BAAyC2C,EAAI,GAC7C,iCACI,KADJ,IACWD,EAAEiE,eAAeD,QAAQ,MAAO,SAD3C,IACsD,KADtD,QAmHwDE,CAAalE,EAAGC,MAE9E,yBAAK3C,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC7C,yBAAKX,UAAU,yEACX,6BAASA,UAAU,qBACjB,yBAAKA,UAAU,kBACb,4CAEF,yBAAKA,UAAU,gBACb,sEACA,+JACA,sLAKR,kBAAC,EAAD,CAAQ8C,UAAWuB,EAAMpD,OAAOV,QCjFvBsG,G,MAtGK,WAAO,IAAD,EACNhH,YAAW,CAAC,UAAvBC,EADiB,sBAEAJ,mBAAS,GAFT,mBAEjBoH,EAFiB,KAEXC,EAFW,OAGArH,mBAAS,IAHT,mBAGjB4B,EAHiB,KAGXC,EAHW,KAKxBC,qBAAU,YACG,uCAAG,4BAAAC,EAAA,sEACYC,IAAMC,IAAInC,WAAW,iBAAmBsH,EAAM,CACpElF,QAAS,CAAEC,cAAe/B,EAAQU,SAFxB,OACNgE,EADM,OAIZ1C,QAAQC,IAAIyC,GACZjD,EAAQiD,EAAUlD,MALN,2CAAH,qDAOXU,KACC,CAAC8E,IAkBJ,OACE,kBAAC,EAAD,KACE,yBAAK9G,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC3C,yBAAKX,UAAU,yCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBAAf,0CACA,yBAAKA,UAAU,yBAAyBE,MAAO,CAAEiE,aAAc,KAC7D,kBAAC,IAAD,CAAMlE,GAAG,kBAAT,2CAGJ,2BAAOD,UAAU,sDACf,+BACE,4BACE,wDACA,4CACA,4CACA,kDACA,oDAGJ,+BACIsB,EAAK0F,MAEH1F,EAAK2F,KAAKxE,KAAI,SAACC,EAAGC,GAAJ,OACZ,wBAAIC,IAAKD,GACP,4BAAKD,EAAEnC,IACP,4BACE,kBAAC,IAAD,CAAMN,GAAI,YAAcyC,EAAEnC,IACxB,8BAAOmC,EAAEgC,SAGb,4BAAKhC,EAAER,cACP,4BAAKQ,EAAER,aAAeI,KAAKC,MAAOG,EAAEwE,aAAexE,EAAER,aAAgB,KAAO,EAA5E,MACA,4BAC8B,IAA3BQ,EAAEyE,cAAc/E,OACf,IACEM,EAAEyE,cAAc,GAAGnC,OACrB,0BAAM9E,MAAO,CAAEC,MAAO,QAASM,WAAY,SAA3C,gBAEA,0BAAMP,MAAO,CAAEC,MAAO,MAAOM,WAAY,SAAzC,qBAjBR,OAwBR,6BACE,yBAAKT,UAAU,yBAAyBI,KAAK,aAAagH,aAAW,cACnE,yBAAKpH,UAAU,sBAAsBK,QAAS,kBAAM0G,EAAQD,EAAO,GAAK,EAAIA,EAAO,EAAIA,KAAvF,YAGA,yBACE9G,UAAU,kBACVK,QAAS,kBAAM0G,EAAQD,EAAO,EAAIxF,EAAK0F,MAAQ,GAAKF,EAAO,EAAIA,KAFjE,aAMA,wBAAI9G,UAAU,mBA3EX,WAEjB,IADA,IAAMqH,EAAM,GACH1E,EAAI,EAAGA,EAAIrB,EAAK0F,MAAQ,MAC3BK,EAAIjF,QAAU,GADiBO,IAE/BA,EAAImE,EAAO,GACfO,EAAIC,KAAK3E,GAEX,OAAO0E,EAAI5E,KAAI,SAACC,EAAGC,GAAJ,OACb,wBAAIC,IAAKD,GACP,yBAAK3C,UAAS,0BAAqB8G,IAASpE,EAAI,aAAe,MAAQrC,QAAS,kBAAM0G,EAAQrE,KAC3FA,EAAI,OAiEoC6E,aCzBpCC,G,MAnED,WAAO,IAAD,EACE9H,mBAAS,IADX,mBACXa,EADW,KACPkH,EADO,OAEE/H,mBAAS,IAFX,mBAEXgI,EAFW,KAEPC,EAFO,OAGI9H,YAAW,CAAC,UAAzB+H,EAHS,oBAKZC,EAAM,uCAAG,4BAAApG,EAAA,sEACKC,IAAMwB,KAAK1D,WAAW,cAAe,CAAEe,KAAImH,OADhD,OACPI,EADO,OAEbhG,QAAQC,IAAI+F,EAAIxG,MACS,YAArBwG,EAAIxG,KAAKW,SACX2F,EAAU,QAASE,EAAIxG,KAAKd,OAC5BuH,SAAS3E,SAASxC,KAAO,KAEzB2C,MAAMuE,EAAIxG,KAAKW,SAPJ,2CAAH,qDAWZ,OACE,kBAAC,EAAD,KACE,yBAAKjC,UAAU,WACb,yBAAKA,UAAU,0GACb,yBAAKA,UAAU,MAAME,MAAO,CAAES,UAAW,MACvC,yBAAKX,UAAU,aACb,uBAAGA,UAAU,iCACX,uDAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,SAAjB,UAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,2BAAOA,UAAU,QAAQgI,KAAK,OAAOrE,MAAOpD,EAAIqD,SAAU,SAACqE,GAAD,OAAOR,EAAMQ,EAAEC,OAAOvE,cAKxF,yBAAK3D,UAAU,uBACb,yBAAKA,UAAU,yBACb,2BAAOA,UAAU,SAAjB,UAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,WACX,2BAAOA,UAAU,QAAQgI,KAAK,WAAWrE,MAAO+D,EAAI9D,SAAU,SAACqE,GAAD,OAAON,EAAMM,EAAEC,OAAOvE,eAM9F,yBAAK3D,UAAU,iBACb,4BAAQA,UAAU,qBAChB,kBAAC,IAAD,CAAME,MAAO,CAAEC,MAAO,SAAWF,GAAG,SAApC,6BAIF,4BAAQD,UAAU,iBAAiBK,QAASwH,GAA5C,6BC2ECM,EAtIF,WAAO,IAAD,EACGzI,mBAAS,IADZ,mBACV0I,EADU,KACNC,EADM,OAEG3I,mBAAS,IAFZ,mBAEVgI,EAFU,KAENC,EAFM,OAGajI,mBAAS,IAHtB,mBAGV4I,EAHU,KAGDC,EAHC,KAKXV,EAAM,uCAAG,4BAAApG,EAAA,2DACT2G,EAAGhG,QAAU,GAAKsF,EAAGtF,QAAU,GAAKsF,IAAOY,GADlC,gCAEO5G,IAAMwB,KAAK1D,WAAW,aAAc,CAAC4I,KAAIV,OAFhD,OAELI,EAFK,OAGXhG,QAAQC,IAAI+F,EAAIxG,MACA,UAAbwG,EAAIxG,KAAkBiC,MAAM,gFAE7BA,MAAM,kEACNwE,SAAS3E,SAASxC,KAAO,KAPhB,sBAUX2C,MAAM,yEAVK,2CAAH,qDAcZ,OACE,kBAAC,EAAD,KACE,yBAAKvD,UAAU,UAAUE,MAAO,CAAES,UAAW,MAC3C,yBAAKX,UAAU,6GACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,oBAAoBE,MAAO,CAAEsI,SAAU,WAClD,6DAGF,yBAAKxI,UAAU,SACb,2BAAOA,UAAU,SAAjB,sBACA,yBAAKA,UAAU,0CACb,2BACEA,UAAkB,KAAPoI,EAAY,QAAU,UAAYA,EAAGhG,QAAU,EAAI,aAAe,aAC7E4F,KAAK,OACLS,YAAY,2DACZ9E,MAAOyE,EACPxE,SAAU,SAACqE,GAAD,OAAOI,EAAMJ,EAAEC,OAAOvE,UAElC,0BAAM3D,UAAU,yBACd,uBAAGA,UAAU,iBAEP,KAAPoI,EAAY,KAAOA,EAAGhG,QAAU,EAC/B,0BAAMpC,UAAU,0BACd,uBAAGA,UAAU,kBAGf,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,kCAInB,uBAAGA,UAAW,SAAWoI,EAAGhG,QAAU,EAAI,aAAe,cAAzD,+DAGF,yBAAKpC,UAAU,SACb,2BAAOA,UAAU,SAAjB,4BACA,yBAAKA,UAAU,0CACb,2BACEA,UAAkB,KAAP0H,EAAY,QAAU,UAAYA,EAAGtF,QAAU,EAAI,aAAe,aAC7E4F,KAAK,WACLS,YAAY,wEACZ9E,MAAO+D,EACP9D,SAAU,SAACqE,GAAD,OAAON,EAAMM,EAAEC,OAAOvE,UAElC,0BAAM3D,UAAU,yBACd,uBAAGA,UAAU,gBAEP,KAAP0H,EAAY,KAAOA,EAAGtF,QAAU,EAC/B,0BAAMpC,UAAU,0BACd,uBAAGA,UAAU,kBAGf,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,kCAInB,uBAAGA,UAAW,SAAW0H,EAAGtF,QAAU,EAAI,aAAe,cAAzD,+DAGF,yBAAKpC,UAAU,SACb,2BAAOA,UAAU,SAAjB,yCACA,yBAAKA,UAAU,0CACb,2BACEA,UACc,KAAZsI,EACI,QACA,UAAYZ,EAAGtF,QAAU,GAAKsF,IAAOY,EAAU,aAAe,aAEpEN,KAAK,WACLS,YAAY,6EACZ9E,MAAO2E,EACP1E,SAAU,SAACqE,GAAD,OAAOM,EAAWN,EAAEC,OAAOvE,UAEvC,0BAAM3D,UAAU,yBACd,uBAAGA,UAAU,gBAEF,KAAZsI,EAAiB,KAAOZ,EAAGtF,QAAU,GAAKsF,IAAOY,EAChD,0BAAMtI,UAAU,0BACd,uBAAGA,UAAU,kBAGf,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,kCAInB,uBAAGA,UAAW,SAAW0H,EAAGtF,OAAS,GAAKsF,IAAOY,EAAU,aAAe,cACvEZ,EAAGtF,QAAU,GAAKsF,IAAOY,EAAU,GAAK,sFAI7C,yBAAKtI,UAAU,uBACb,yBACEA,UAAU,kBACVK,QAAS,WACPgI,EAAM,IACNV,EAAM,IACNY,EAAW,MALf,sBAUA,yBAAKvI,UAAU,iBAAiBK,QAASwH,GAAzC,sBC6HCa,EAxPO,WAAO,IAAD,EACR7I,YAAW,CAAC,UAAvBC,EADmB,sBAEIJ,mBAAS,IAFb,mBAEnBuC,EAFmB,KAEV0G,EAFU,OAGUjJ,mBAAS,CAC3CgF,MAAO,GACP2B,aAAc,GACdC,WAAY,GACZC,YAAa,GACbH,MAAO,GACPwC,aAAc,CAAC,CAAEC,MAAO,GAAIC,OAAQ,KACpCC,WAAY,CAAC,CAAEF,MAAO,GAAIC,OAAQ,OAVV,mBAGnBxE,EAHmB,KAGP0E,EAHO,KAY1BxH,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,sEACCC,IAAMwB,KACtB1D,WAAW,mBACX,GACA,CACEoC,QAAS,CAAEC,cAAe/B,EAAQU,SALrB,OACXsH,EADW,OAQjBhG,QAAQC,IAAI+F,EAAIxG,KAAKW,SACrB0G,EAAWb,EAAIxG,KAAKW,SATH,2CAAH,qDAWhBgH,KACC,CAACnJ,IAEJ,IAAM+H,EAAM,uCAAG,4BAAApG,EAAA,sEACKC,IAAMwB,KAAK1D,WAAW,kBAAmB8E,EAAY,CACrE1C,QAAS,CAAEC,cAAe/B,EAAQU,SAFvB,OACPsH,EADO,OAIbhG,QAAQC,IAAI+F,EAAIxG,MAJH,2CAAH,qDA+MZ,MAAgB,YAAZW,EAvMF,kBAAC,EAAD,KACE,yBAAKjC,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC3C,yBAAKX,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BACA,2BACEA,UAAU,QACVgI,KAAK,OACLS,YAAY,qDACZ9E,MAAOW,EAAWI,MAClBd,SAAU,SAACqE,GAAD,OAAOe,EAAc,eAAK1E,EAAN,CAAkBI,MAAOuD,EAAEC,OAAOvE,eAKxE,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6CACA,2BACEA,UAAU,QACVgI,KAAK,SACLS,YAAY,qDACZ9E,MAAOW,EAAW8B,MAClBxC,SAAU,SAACqE,GAAD,OAAOe,EAAc,eAAK1E,EAAN,CAAkB8B,MAAO6B,EAAEC,OAAOvE,eAKxE,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BACA,8BACEA,UAAU,WACVyI,YAAY,yCACZ9E,MAAOW,EAAW+B,aAClBzC,SAAU,SAACqE,GAAD,OAAOe,EAAc,eAAK1E,EAAN,CAAkB+B,aAAc4B,EAAEC,OAAOvE,eAK/E,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BACA,8BACEA,UAAU,WACVyI,YAAY,iEACZ9E,MAAOW,EAAWgC,WAClB1C,SAAU,SAACqE,GAAD,OAAOe,EAAc,eAAK1E,EAAN,CAAkBgC,WAAY2B,EAAEC,OAAOvE,eAK7E,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,6BACA,8BACEA,UAAU,WACVyI,YAAY,iEACZ9E,MAAOW,EAAWiC,YAClB3C,SAAU,SAACqE,GAAD,OAAOe,EAAc,eAAK1E,EAAN,CAAkBiC,YAAa0B,EAAEC,OAAOvE,eAM7EW,EAAWsE,aAAanG,KAAI,SAACC,EAAGC,GAAJ,OAC3B,yBAAK3C,UAAU,UAAU4C,IAAKD,GAC5B,yBAAK3C,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,gDAA6C2C,EAAI,GACjD,8BACE3C,UAAU,WACVyI,YAAY,8EACZ9E,MAAOW,EAAWsE,aAAajG,GAAGkG,MAClCjF,SAAU,SAACqE,GAAD,OACRe,EAAc,eACT1E,EADQ,CAEXsE,aAAa,GAAD,mBACPtE,EAAWsE,aAAatD,MAAM,EAAG3C,IAD1B,CAEV,CAAEkG,MAAOZ,EAAEC,OAAOvE,MAAOmF,OAAQxE,EAAWsE,aAAajG,GAAGmG,SAFlD,YAGPxE,EAAWsE,aAAatD,MAAM3C,EAAI,aAOjD,yBAAK3C,UAAU,sDACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,gDAA6C2C,EAAI,GACjD,8BACE3C,UAAU,WACVyI,YAAY,8EACZ9E,MAAOW,EAAWsE,aAAajG,GAAGmG,OAClClF,SAAU,SAACqE,GAAD,OACRe,EAAc,eACT1E,EADQ,CAEXsE,aAAa,GAAD,mBACPtE,EAAWsE,aAAatD,MAAM,EAAG3C,IAD1B,CAEV,CAAEkG,MAAOvE,EAAWsE,aAAajG,GAAGkG,MAAOC,OAAQb,EAAEC,OAAOvE,QAFlD,YAGPW,EAAWsE,aAAatD,MAAM3C,EAAI,iBASrD,yBAAK3C,UAAU,uBACb,4BACEA,UAAU,oBACVK,QAAS,kBACP2I,EAAc,eAAK1E,EAAN,CAAkBsE,aAAa,GAAD,mBAAMtE,EAAWsE,cAAjB,CAA+B,CAAEC,MAAO,GAAIC,OAAQ,WAHnG,gDASA,4BACE9I,UAAU,mBACVK,QAAS,kBAAM2I,EAAc,eAAK1E,EAAN,CAAkBsE,aAAa,YAAKtE,EAAWsE,aAAatD,MAAM,GAAI,SAFpG,iDAQDhB,EAAWyE,WAAWtG,KAAI,SAACC,EAAGC,GAAJ,OACzB,yBAAK3C,UAAU,UAAU4C,IAAKD,GAC5B,yBAAK3C,UAAU,yEACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,gDAA6C2C,EAAI,GACjD,8BACE3C,UAAU,WACVyI,YAAY,8EACZ9E,MAAOW,EAAWyE,WAAWpG,GAAGkG,MAChCjF,SAAU,SAACqE,GAAD,OACRe,EAAc,eACT1E,EADQ,CAEXyE,WAAW,GAAD,mBACLzE,EAAWyE,WAAWzD,MAAM,EAAG3C,IAD1B,CAER,CAAEkG,MAAOZ,EAAEC,OAAOvE,MAAOmF,OAAQxE,EAAWyE,WAAWpG,GAAGmG,SAFlD,YAGLxE,EAAWyE,WAAWzD,MAAM3C,EAAI,aAO/C,yBAAK3C,UAAU,sDACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,sBAAb,gDAA6C2C,EAAI,GACjD,8BACE3C,UAAU,WACVyI,YAAY,8EACZ9E,MAAOW,EAAWyE,WAAWpG,GAAGmG,OAChClF,SAAU,SAACqE,GAAD,OACRe,EAAc,eACT1E,EADQ,CAEXyE,WAAW,GAAD,mBACLzE,EAAWyE,WAAWzD,MAAM,EAAG3C,IAD1B,CAER,CAAEmG,OAAQb,EAAEC,OAAOvE,MAAOkF,MAAOvE,EAAWyE,WAAWpG,GAAGkG,QAFlD,YAGLvE,EAAWyE,WAAWzD,MAAM3C,EAAI,iBASnD,yBAAK3C,UAAU,uBACb,4BACEA,UAAU,oBACVK,QAAS,kBACP2I,EAAc,eAAK1E,EAAN,CAAkByE,WAAW,GAAD,mBAAMzE,EAAWyE,YAAjB,CAA6B,CAAEF,MAAO,GAAIC,OAAQ,WAH/F,gDAQA,4BACE9I,UAAU,mBACVK,QAAS,kBAAM2I,EAAc,eAAK1E,EAAN,CAAkByE,WAAW,YAAKzE,EAAWyE,WAAWzD,MAAM,GAAI,SAFhG,iDAQF,yBAAKtF,UAAU,uBACb,4BAAQA,UAAU,iBAAiBK,QAAS,kBAAMwH,MAAlD,kBAUF,kBAAC,EAAD,KACE,yBAAK7H,UAAU,UAAUE,MAAO,CAAES,UAAW,KAC3C,yBAAKX,UAAU,yCACb,yBAAKA,UAAU,OAAmB,KAAZiC,EAAiB,0CAAcA,O,MC5NlDiH,MAdf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWhI,IACjC,kBAAC,IAAD,CAAO+H,KAAK,eAAeC,UAAWjF,IACtC,kBAAC,IAAD,CAAOgF,KAAK,eAAeC,UAAWxC,IACtC,kBAAC,IAAD,CAAOuC,KAAK,SAASC,UAAW7B,IAChC,kBAAC,IAAD,CAAO4B,KAAK,QAAQC,UAAWlB,IAC/B,kBAAC,IAAD,CAAOiB,KAAK,iBAAiBC,UAAWX,MCV1Ba,QACW,cAA7BpG,OAAOC,SAASoG,UAEe,UAA7BrG,OAAOC,SAASoG,UAEhBrG,OAAOC,SAASoG,SAASnF,MACvB,2D,kBCRNoF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,SAIN7B,SAAS8B,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvI,QAAQuI,MAAMA,EAAMpI,c","file":"static/js/main.c17df211.chunk.js","sourcesContent":["module.exports.serverIP = 'http://localhost:80'","import React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\n\nconst Header = () => {\n  const [toggleBugger, setToggleBugger] = useState(false)\n  const [cookies, , removeCookie] = useCookies([\"token\"])\n  return (\n    <div className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <Link to=\"/\" style={{ color: \"black\" }}>\n            JS online-judge\n          </Link>\n        </div>\n        <div role=\"button\" className=\"navbar-burger\" onClick={() => setToggleBugger(!toggleBugger)}>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </div>\n      </div>\n      <div id=\"navMenu\" className={toggleBugger ? \"navbar-menu is-active\" : \"navbar-menu\"}>\n        <div className=\"navbar-start\">\n          <div className=\"navbar-item\">\n            <Link className=\"menu_item\" to=\"/problemlist\" style={{ color: \"black\" }}>\n              문제목록\n            </Link>\n          </div>\n\n          <div className=\"navbar-item\">\n            <Link className=\"menu_item\" to=\"/mypage\" style={{ color: \"black\" }}>\n              내정보\n            </Link>\n          </div>\n          <div className=\"navbar-item\"></div>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              {!cookies.token ? (\n                <div>\n                  <div className=\"button is-primary\">\n                    <Link className=\"menu_item\" to=\"/join\" style={{ color: \"white\", fontWeight: \"bold\" }}>\n                      회원가입\n                    </Link>\n                  </div>\n\n                  <div className=\"button is-light\">\n                    <Link className=\"menu_item\" to=\"/login\">\n                      로그인\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"button is-primary\" onClick={() => removeCookie(\"token\")}>\n                  로그아웃\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\" style={{marginTop: 50}}>\n      <div className=\"content has-text-centered\">\n        <p>\n          by  <a href =\"https://github.com/soso01\">soso01</a>\n        </p>\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport './Layout.scss'\n\nconst index = (props) => {\n    return (\n        <div className=\"main\">\n            <Header />\n            <div className=\"layout-content\">\n                {props.children}\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default index\n","import React from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport Swiper from \"react-id-swiper\"\nimport \"./Main.scss\"\n\nimport \"swiper/css/swiper.css\"\n\nconst SimpleSwiper = () => {\n  const params = {\n    pagination: {\n      el: \".swiper-pagination\",\n      clickable: true,\n    },\n  }\n\n  return (\n    <Swiper {...params}>\n      <div className=\"slide_item\">\n        <span className=\"title\" style={{ color: \"white\", fontWeight: \"bold\" }}>\n          JS 온라인 저지 사이트입니다.\n        </span>\n      </div>\n      <div className=\"slide_item\">\n        <span className=\"title\" style={{ color: \"white\", fontWeight: \"bold\" }}>\n          JS 온라인 저지 사이트입니다.\n        </span>\n      </div>\n      <div className=\"slide_item\">\n        <span className=\"title\" style={{ color: \"white\", fontWeight: \"bold\" }}>\n          JS 온라인 저지 사이트입니다.\n        </span>\n      </div>\n    </Swiper>\n  )\n}\n\nexport default () => {\n  return (\n    <Layout>\n      <SimpleSwiper></SimpleSwiper>\n      <div className=\"columns\">\n        <div className=\"column is-offset-2-tablet is-8-tablet\">\n          <div className=\"main-problem-container\">\n            <div className=\"box main-problem-item\">컨텐츠 1</div>\n            <div className=\"box main-problem-item\">컨텐츠 2</div>\n            <div className=\"box main-problem-item\">컨텐츠 3</div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Layout from \"../../Component/Layout\"\nimport axios from \"axios\"\nimport { serverIP } from \"../../lib/key\"\nimport { useCookies } from \"react-cookie\"\n\nimport \"./MyPage.scss\"\n\nconst MyPage = () => {\n  const [cookies] = useCookies([\"token\"])\n  const [data, setData] = useState({})\n  useEffect(() => {\n    const fetch = async () => {\n      const data = (await axios.get(serverIP + \"/myPage\", { headers: { Authorization: cookies.token } })).data\n      console.log(data)\n      setData(data)\n    }\n    fetch()\n  }, [])\n  if (data.message !== \"success\") {\n    return (\n      <Layout>\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <p className=\"title has-text-centered\" style={{ marginTop: 200 }}>\n            로그인이 필요합니다.\n          </p>\n        </div>\n      </Layout>\n    )\n  }\n  return (\n    <Layout>\n      <div className=\"columns\" style={{ marginTop: 30 }}>\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"level\">\n            <div className=\"level-item has-text-centered\">\n              <div>\n                <p className=\"heading\">토탈 제출</p>\n                <p className=\"title\">{data.total_submit}</p>\n              </div>\n            </div>\n            <div className=\"level-item has-text-centered\">\n              <div>\n                <p className=\"heading\">맞은 문제</p>\n                <p className=\"title\">{data.solved_arr.length}</p>\n              </div>\n            </div>\n            <div className=\"level-item has-text-centered\">\n              <div>\n                <p className=\"heading\">틀린문제</p>\n                <p className=\"title\">{data.wrong_arr.length}</p>\n              </div>\n            </div>\n            <div className=\"level-item has-text-centered\">\n              <div>\n                <p className=\"heading\">정답율</p>\n                <p className=\"title\">\n                  {data.total_submit ? Math.floor((data.solved_arr.length / data.total_submit) * 100) : 0} %\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"box container\" style={{ marginTop: 50 }}>\n            <p>맞은 문제</p>\n            <p style={{ margin: 10 }}>\n              {data.solved_arr.map((v, i) => (\n                  <Link key={i} to={\"/problem/\" + v}><span  style={{color: 'green', fontWeight: 'bold'}}> { v } </span></Link>\n              ))}\n            </p>\n          </div>\n          <div className=\"box container\" style={{ marginTop: 50 }}>\n            <p>틀린 문제</p>\n            <p style={{ margin: 10 }}>\n              {data.wrong_arr.map((v, i) => (\n                  <Link key={i} to={\"/problem/\" + v}><span  style={{color: 'red', fontWeight: 'bold'}}> { v } </span></Link>\n              ))}\n            </p>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default MyPage\n","import React, { useState } from \"react\"\nimport { useCookies } from \"react-cookie\"\nimport \"./Submit.scss\"\n\nimport axios from \"axios\"\nimport { serverIP } from \"../../lib/key\"\n\nimport AceEditor from \"react-ace\"\n\nimport \"ace-builds/src-noconflict/mode-javascript\"\nimport \"ace-builds/src-noconflict/theme-monokai\"\n\nconst Submit = ({ ProblemId }) => {\n  const [code, setCode] = useState(\"function solve(input) {\\n\\tlet answer = [];\\n\\n\\treturn answer;\\n}\")\n  const [cookies] = useCookies([\"token\"])\n\n  const onclickSubmit = async () => {\n    const res = await axios.post(\n      serverIP + \"/submit/judge\",\n      { code, ProblemId },\n      { headers: { Authorization: cookies.token } }\n    )\n    if (res.data === \"success\") {\n      window.location.reload()\n      window.scrollTo(0, 0)\n    } else {\n      alert(\"로그인이 필요합니다.\")\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"columns\" style={{ marginTop: 30 }}>\n        <div className=\"column is-offset-2-tablet is-8-tablet is-12-mobile\">\n          <AceEditor\n            mode=\"javascript\"\n            theme=\"monokai\"\n            value={code}\n            onChange={(text) => setCode(text)}\n            name=\"UNIQUE_ID_OF_DIV\"\n            editorProps={{ $blockScrolling: true }}\n            showPrintMargin={false}\n            style={{ width: \"100%\" }}\n          />\n        </div>\n      </div>\n      <div className=\"buttons is-centered\" style={{ marginBottom: 20 }}>\n        <div className=\"button is-success\" onClick={onclickSubmit}>\n          제출하기\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Submit\n","import React, { useState, useEffect } from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport Submit from \"../../Component/Submit\"\nimport { Link } from \"react-router-dom\"\nimport { useCookies } from \"react-cookie\"\n\nimport axios from \"axios\"\nimport { serverIP } from \"../../lib/key\"\n\nimport \"./Problem.scss\"\n\nconst Problem = ({ match }) => {\n  const [data, setData] = useState({})\n  const [cookies] = useCookies([\"token\"])\n  const [submitData, setSubmitData] = useState({})\n  useEffect(() => {\n    const fetch = async () => {\n      const fetchData = await axios.get(serverIP + \"/problem/\" + match.params.id)\n      setData(fetchData.data)\n    }\n    fetch()\n  }, [match.params.id])\n\n  useEffect(() => {\n    const fetch = async () => {\n      const fetchData = await axios.post(\n        serverIP + \"/problem/getUserSubmit\",\n        { ProblemId: match.params.id },\n        {\n          headers: { Authorization: cookies.token },\n        }\n      )\n      console.log(fetchData.data)\n      setSubmitData(fetchData.data)\n    }\n    fetch()\n  }, [])\n\n  const printInfo = (title, content) => (\n    <div className=\"columns\">\n      <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n        <div className=\"box container\">\n          <p className=\"problem-data-title\">{title}</p>\n          {content && content.split(\"\\n\").map((v, i) => <p key={i}>{v.trim()}</p>)}\n        </div>\n      </div>\n    </div>\n  )\n  const printExample = (v, i) => {\n    return (\n      <div className=\"columns\" style={{ marginBottom: 30 }} key={i}>\n        <div className=\"column is-offset-2-tablet is-4-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">예제 입력 {i + 1}</p>\n            <pre>\n              [{\"\\n\"}\"{v.input_example.replace(/\\n/g, '\",\\n\"')}\"{\"\\n\"}]\n            </pre>\n          </div>\n        </div>\n        <div className=\"column is-4-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">예제 출력 {i + 1}</p>\n            <pre>\n              [{\"\\n\"}\"{v.output_example.replace(/\\n/g, '\",\\n\"')}\"{\"\\n\"}]\n            </pre>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const printSubmit = () => {\n    if (!Array.isArray(submitData) || !submitData.length) return <div style={{marginTop: 30}}></div>\n    return (\n      <div className=\"columns\" style={{ marginTop: 30, marginBottom: 30 }}>\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">채점기록</p>\n            <table className=\"table is-hoverable\" style={{ width: \"100%\" }}>\n              <thead>\n                <tr>\n                  <th className=\"is-1\">번호</th>\n                  <th className=\"is-2\">결과</th>\n                  <th className=\"is-1\">코드길이</th>\n                  <th className=\"is-1\">제출날짜</th>\n                </tr>\n              </thead>\n              <tbody>\n                {submitData.map((v, i) => {\n                  const date = new Date(v.createdAt)\n                  return (\n                    <React.Fragment key={i}>\n                      <tr\n                        onClick={() =>\n                          setSubmitData([\n                            ...submitData.slice(0, i),\n                            { ...v, toggle: !v.toggle },\n                            ...submitData.slice(i + 1),\n                          ])\n                        }\n                      >\n                        <td>{i+1}</td>\n                        <td>\n                          {v.done ? v.solved ? (\n                            <span style={{ color: \"green\", fontWeight: \"bold\" }}>정답입니다</span>\n                          ) : (\n                            <span style={{ color: \"red\", fontWeight: \"bold\" }}>오답입니다</span>\n                          ) : \n                          <span style={{ color: \"gold\", fontWeight: \"bold\" }}>채점 중입니다..</span>}\n                        </td>\n                        <td>{v.code.length}</td>\n                        <td>\n                          {date.getFullYear() % 100}-{date.getMonth() + 1}-{date.getDate()} / {date.getHours()}:\n                          {date.getMinutes()}\n                        </td>\n                      </tr>\n                      {v.toggle && (\n                        <tr>\n                          <td colSpan={4}>\n                            <div>\n                              <table className=\"table\" style={{ marginTop: 15, marginBottom: 15, width: \"100%\" }}>\n                                <thead>\n                                  <tr>\n                                    <th style={{ width: \"30%\" }}>테스트케이스</th>\n                                    <th style={{ width: \"40%\" }}>결과</th>\n                                    <th style={{ width: \"30%\" }}>시간</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  {v.Submit_results.map((judge_v, judge_i) => (\n                                    <tr key={judge_i}>\n                                      <td>{judge_i + 1} 번</td>\n                                      <td>{judge_v.result}</td>\n                                      <td>{judge_v.time !== null ? judge_v.time + \" ms\" : \"-\"}</td>\n                                    </tr>\n                                  ))}\n                                </tbody>\n                              </table>\n                            </div>\n                          </td>\n                        </tr>\n                      )}\n                    </React.Fragment>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  const isSolved = () => {\n    if (!Array.isArray(submitData) || !submitData.length) return \"is-dark\"\n    let solved = false\n    submitData.forEach((v) => {\n      if (v.solved) solved = true\n    })\n    return solved ? \"is-success\" : \"is-danger\"\n  }\n\n  return (\n    <Layout>\n      <section className={\"hero \" + isSolved()}>\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">{data.title}</h1>\n            <h2 className=\"subtitle\">{data.id}번</h2>\n          </div>\n        </div>\n      </section>\n\n      {printSubmit()}\n      {printInfo(\"제한시간\", data.limit + \" ms\")}\n      {printInfo(\"문제\", data.problem_info)}\n      {printInfo(\"입력\", data.input_info)}\n      {printInfo(\"출력\", data.output_info)}\n      {data.Problem_examples && data.Problem_examples.map((v, i) => printExample(v, i))}\n\n      <div className=\"columns\" style={{ marginTop: 50 }}>\n      <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <article className=\"message is-danger\">\n            <div className=\"message-header\">\n              <p>주의</p>\n            </div>\n            <div className=\"message-body\">\n              <p>- 세미콜론 필수</p>\n              <p>- 입력 데이터 input은 예제 데이터 형식의 배열입니다.</p>\n              <p>- 출력 데이터 예제와 같이 배열형태의 answer를 리턴해주세요.</p>\n            </div>\n          </article>\n        </div>\n      </div>\n      <Submit ProblemId={match.params.id} />\n    </Layout>\n  )\n}\n\nexport default Problem\n","import React, { useEffect, useState } from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport axios from \"axios\"\nimport { serverIP } from \"../../lib/key\"\nimport { useCookies } from \"react-cookie\"\n\nimport { Link } from \"react-router-dom\"\n\nimport \"./ProblemList.scss\"\n\nconst ProblemList = () => {\n  const [cookies] = useCookies([\"token\"])\n  const [page, setPage] = useState(0)\n  const [data, setData] = useState({})\n\n  useEffect(() => {\n    const fetch = async () => {\n      const fetchData = await axios.get(serverIP + \"/problem/list/\" + page, {\n        headers: { Authorization: cookies.token },\n      })\n      console.log(fetchData)\n      setData(fetchData.data)\n    }\n    fetch()\n  }, [page])\n\n  const pageButton = () => {\n    const arr = []\n    for (let i = 0; i < data.count / 15; i++) {\n      if (arr.length >= 5) break\n      if (i < page - 2) continue\n      arr.push(i)\n    }\n    return arr.map((v, i) => (\n      <li key={i}>\n        <div className={`pagination-link ${page === v ? \"is-current\" : null}`} onClick={() => setPage(v)}>\n          {v + 1}\n        </div>\n      </li>\n    ))\n  }\n\n  return (\n    <Layout>\n      <div className=\"columns\" style={{ marginTop: 20 }}>\n        <div className=\"column is-offset-2-tablet is-8-tablet\">\n          <div className=\"box\">\n            <div className=\"table-container\">\n              <div className=\"container\">\n                <div className=\"is-pulled-left\">전체 문제 목록</div>\n                <div className=\"button is-pulled-right\" style={{ marginBottom: 20 }}>\n                  <Link to=\"/problemcreate\">문제 생성하기</Link>\n                </div>\n              </div>\n              <table className=\"table is-hoverable is-fullwidth problem-list-table\">\n                <thead>\n                  <tr>\n                    <th>문제번호</th>\n                    <th>제목</th>\n                    <th>제출</th>\n                    <th>정답율</th>\n                    <th>내정보</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!data.count\n                    ? null\n                    : data.rows.map((v, i) => (\n                        <tr key={i}>\n                          <td>{v.id}</td>\n                          <td>\n                            <Link to={\"/problem/\" + v.id}>\n                              <span>{v.title}</span>\n                            </Link>\n                          </td>\n                          <td>{v.total_submit}</td>\n                          <td>{v.total_submit ? Math.floor((v.total_solved / v.total_submit) * 100) : 0} %</td>\n                          <td>\n                            {v.User_problems.length === 0 ? (\n                              \"-\"\n                            ) : v.User_problems[0].solved ? (\n                              <span style={{ color: \"green\", fontWeight: \"bold\" }}>정답</span>\n                            ) : (\n                              <span style={{ color: \"red\", fontWeight: \"bold\" }}>오답</span>\n                            )}\n                          </td>\n                        </tr>\n                      ))}\n                </tbody>\n              </table>\n              <div>\n                <nav className=\"pagination is-centered\" role=\"navigation\" aria-label=\"pagination\">\n                  <div className=\"pagination-previous\" onClick={() => setPage(page - 1 >= 0 ? page - 1 : page)}>\n                    Previous\n                  </div>\n                  <div\n                    className=\"pagination-next\"\n                    onClick={() => setPage(page + 1 < data.count / 15 ? page + 1 : page)}\n                  >\n                    Next page\n                  </div>\n                  <ul className=\"pagination-list\">{pageButton()}</ul>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default ProblemList\n","import React, { useState } from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport { Link } from \"react-router-dom\"\nimport axios from \"axios\"\nimport { useCookies } from 'react-cookie';\n\nimport { serverIP } from \"../../lib/key\"\nimport \"./Login.scss\"\n\nconst Login = () => {\n  const [id, setId] = useState(\"\")\n  const [pw, setPw] = useState(\"\")\n  const [, setCookie] = useCookies(['token'])\n\n  const submit = async () => {\n    const res = await axios.post(serverIP + \"/auth/login\", { id, pw })\n    console.log(res.data)\n    if (res.data.message === \"success\") {\n      setCookie('token', res.data.token)\n      document.location.href = \"/\"\n    } else {\n      alert(res.data.message)\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"columns\">\n        <div className=\"column is-offset-4-desktop is-4-desktop is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box\" style={{ marginTop: 150 }}>\n            <div className=\"container\">\n              <p className=\"has-text-centered login-title\">\n                <strong>로그인</strong>\n              </p>\n              <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                  <label className=\"label\">ID : </label>\n                </div>\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input className=\"input\" type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"field is-horizontal\">\n                <div className=\"field-label is-normal\">\n                  <label className=\"label\">PW : </label>\n                </div>\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input className=\"input\" type=\"password\" value={pw} onChange={(e) => setPw(e.target.value)} />\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"login-buttons\">\n              <button className=\"button is-primary\">\n                <Link style={{ color: \"white\" }} to=\"/join\">\n                  회원가입\n                </Link>\n              </button>\n              <button className=\"button is-link\" onClick={submit}>\n                로그인\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Login\n","import React, { useState } from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport axios from \"axios\"\n\nimport {serverIP} from '../../lib/key'\n\nconst Join = () => {\n  const [ID, setID] = useState(\"\")\n  const [pw, setPw] = useState(\"\")\n  const [pwCheck, setPwCheck] = useState(\"\")\n\n  const submit = async () => {\n    if (ID.length >= 4 && pw.length >= 6 && pw === pwCheck) {\n      const res = await axios.post(serverIP + '/auth/join', {ID, pw})\n      console.log(res.data)\n      if(res.data === 'exist') alert('이미 존재하는 아이디입니다.')\n      else {\n        alert('가입이 완료되었습니다.')\n        document.location.href = '/';\n      }\n    } else {\n      alert(\"입력조건을 확인해 주세요.\")\n    }\n  }\n\n  return (\n    <Layout>\n      <div className=\"columns\" style={{ marginTop: 100 }}>\n        <div className=\"column is-offset-3-desktop is-half-desktop is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"has-text-centered\" style={{ fontSize: \"1.5rem\" }}>\n              <strong>회원가입</strong>\n            </p>\n\n            <div className=\"field\">\n              <label className=\"label\">아이디</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className={ID === \"\" ? \"input\" : \"input \" + (ID.length >= 4 ? \"is-success\" : \"is-danger\")}\n                  type=\"text\"\n                  placeholder=\"아이디를 입력하세요.\"\n                  value={ID}\n                  onChange={(e) => setID(e.target.value)}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-user\"></i>\n                </span>\n                {ID === \"\" ? null : ID.length >= 4 ? (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-check\"></i>\n                  </span>\n                ) : (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-exclamation-triangle\"></i>\n                  </span>\n                )}\n              </div>\n              <p className={\"help \" + (ID.length >= 4 ? \"is-success\" : \"is-danger\")}>4자 이상 입력해주세요.</p>\n            </div>\n\n            <div className=\"field\">\n              <label className=\"label\">패스워드</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className={pw === \"\" ? \"input\" : \"input \" + (pw.length >= 6 ? \"is-success\" : \"is-danger\")}\n                  type=\"password\"\n                  placeholder=\"비밀번호를 입력해 주세요.\"\n                  value={pw}\n                  onChange={(e) => setPw(e.target.value)}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-key\"></i>\n                </span>\n                {pw === \"\" ? null : pw.length >= 6 ? (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-check\"></i>\n                  </span>\n                ) : (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-exclamation-triangle\"></i>\n                  </span>\n                )}\n              </div>\n              <p className={\"help \" + (pw.length >= 6 ? \"is-success\" : \"is-danger\")}>6자 이상 입력해주세요.</p>\n            </div>\n\n            <div className=\"field\">\n              <label className=\"label\">패스워드 확인</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className={\n                    pwCheck === \"\"\n                      ? \"input\"\n                      : \"input \" + (pw.length >= 6 && pw === pwCheck ? \"is-success\" : \"is-danger\")\n                  }\n                  type=\"password\"\n                  placeholder=\"비밀번호를 재입력해주세요.\"\n                  value={pwCheck}\n                  onChange={(e) => setPwCheck(e.target.value)}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-key\"></i>\n                </span>\n                {pwCheck === \"\" ? null : pw.length >= 6 && pw === pwCheck ? (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-check\"></i>\n                  </span>\n                ) : (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-exclamation-triangle\"></i>\n                  </span>\n                )}\n              </div>\n              <p className={\"help \" + (pw.length > 6 && pw === pwCheck ? \"is-success\" : \"is-danger\")}>\n                {pw.length >= 6 && pw === pwCheck ? \"\" : \"비밀번호가 일치하지 않습니다.\"}\n              </p>\n            </div>\n\n            <div className=\"buttons is-centered\">\n              <div\n                className=\"button is-light\"\n                onClick={() => {\n                  setID(\"\")\n                  setPw(\"\")\n                  setPwCheck(\"\")\n                }}\n              >\n                초기화\n              </div>\n              <div className=\"button is-info\" onClick={submit}>\n                가입\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Join\n","import React, { useEffect, useState } from \"react\"\nimport Layout from \"../../Component/Layout\"\nimport axios from \"axios\"\nimport { serverIP } from \"../../lib/key\"\nimport { useCookies } from \"react-cookie\"\n\nconst ProblemCreate = () => {\n  const [cookies] = useCookies([\"token\"])\n  const [message, setMessage] = useState(\"\")\n  const [submitData, setSubminData] = useState({\n    title: \"\",\n    problem_info: \"\",\n    input_info: \"\",\n    output_info: \"\",\n    limit: \"\",\n    example_data: [{ input: \"\", output: \"\" }],\n    judge_data: [{ input: \"\", output: \"\" }],\n  })\n  useEffect(() => {\n    const checkadmin = async () => {\n      const res = await axios.post(\n        serverIP + \"/auth/checkadmin\",\n        {},\n        {\n          headers: { Authorization: cookies.token },\n        }\n      )\n      console.log(res.data.message)\n      setMessage(res.data.message)\n    }\n    checkadmin()\n  }, [cookies])\n\n  const submit = async () => {\n    const res = await axios.post(serverIP + \"/problem/create\", submitData, {\n      headers: { Authorization: cookies.token },\n    })\n    console.log(res.data)\n  }\n\n  const make = () => (\n    <Layout>\n      <div className=\"columns\" style={{ marginTop: 40 }}>\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">문제 제목</p>\n            <input\n              className=\"input\"\n              type=\"text\"\n              placeholder=\"제목을 입력하세요.\"\n              value={submitData.title}\n              onChange={(e) => setSubminData({ ...submitData, title: e.target.value })}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">제한시간 (1000 = 1초)</p>\n            <input\n              className=\"input\"\n              type=\"number\"\n              placeholder=\"제한을 입력하세요.\"\n              value={submitData.limit}\n              onChange={(e) => setSubminData({ ...submitData, limit: e.target.value })}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">문제 설명</p>\n            <textarea\n              className=\"textarea\"\n              placeholder=\"문제 설명 입력\"\n              value={submitData.problem_info}\n              onChange={(e) => setSubminData({ ...submitData, problem_info: e.target.value })}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">입력 설명</p>\n            <textarea\n              className=\"textarea\"\n              placeholder=\"입력 정보를 설명하세요\"\n              value={submitData.input_info}\n              onChange={(e) => setSubminData({ ...submitData, input_info: e.target.value })}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n      <div className=\"columns\">\n        <div className=\"column is-offset-2-tablet is-8-tablet is-offset-1-mobile is-10-mobile\">\n          <div className=\"box container\">\n            <p className=\"problem-data-title\">출력 설명</p>\n            <textarea\n              className=\"textarea\"\n              placeholder=\"출력 정보를 설명하세요\"\n              value={submitData.output_info}\n              onChange={(e) => setSubminData({ ...submitData, output_info: e.target.value })}\n            ></textarea>\n          </div>\n        </div>\n      </div>\n\n      {submitData.example_data.map((v, i) => (\n        <div className=\"columns\" key={i}>\n          <div className=\"column is-offset-2-tablet is-4-tablet is-offset-1-mobile is-10-mobile\">\n            <div className=\"box container\">\n              <p className=\"problem-data-title\">예제 데이터 입력 {i + 1}</p>\n              <textarea\n                className=\"textarea\"\n                placeholder=\"예제 입력 정보를 설명하세요\"\n                value={submitData.example_data[i].input}\n                onChange={(e) =>\n                  setSubminData({\n                    ...submitData,\n                    example_data: [\n                      ...submitData.example_data.slice(0, i),\n                      { input: e.target.value, output: submitData.example_data[i].output },\n                      ...submitData.example_data.slice(i + 1),\n                    ],\n                  })\n                }\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"column is-4-tablet is-offset-1-mobile is-10-mobile\">\n            <div className=\"box container\">\n              <p className=\"problem-data-title\">예제 데이터 출력 {i + 1}</p>\n              <textarea\n                className=\"textarea\"\n                placeholder=\"예제 입력 정보를 설명하세요\"\n                value={submitData.example_data[i].output}\n                onChange={(e) =>\n                  setSubminData({\n                    ...submitData,\n                    example_data: [\n                      ...submitData.example_data.slice(0, i),\n                      { input: submitData.example_data[i].input, output: e.target.value },\n                      ...submitData.example_data.slice(i + 1),\n                    ],\n                  })\n                }\n              ></textarea>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div className=\"buttons is-centered\">\n        <button\n          className=\"button is-success\"\n          onClick={() =>\n            setSubminData({ ...submitData, example_data: [...submitData.example_data, { input: \"\", output: \"\" }] })\n          }\n        >\n          예제 데이터 추가\n        </button>\n\n        <button\n          className=\"button is-danger\"\n          onClick={() => setSubminData({ ...submitData, example_data: [...submitData.example_data.slice(0, -1)] })}\n        >\n          예제 데이터 삭제\n        </button>\n      </div>\n\n      {submitData.judge_data.map((v, i) => (\n        <div className=\"columns\" key={i}>\n          <div className=\"column is-offset-2-tablet is-4-tablet is-offset-1-mobile is-10-mobile\">\n            <div className=\"box container\">\n              <p className=\"problem-data-title\">채점 데이터 입력 {i + 1}</p>\n              <textarea\n                className=\"textarea\"\n                placeholder=\"예제 입력 정보를 설명하세요\"\n                value={submitData.judge_data[i].input}\n                onChange={(e) =>\n                  setSubminData({\n                    ...submitData,\n                    judge_data: [\n                      ...submitData.judge_data.slice(0, i),\n                      { input: e.target.value, output: submitData.judge_data[i].output },\n                      ...submitData.judge_data.slice(i + 1),\n                    ],\n                  })\n                }\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"column is-4-tablet is-offset-1-mobile is-10-mobile\">\n            <div className=\"box container\">\n              <p className=\"problem-data-title\">채점 데이터 출력 {i + 1}</p>\n              <textarea\n                className=\"textarea\"\n                placeholder=\"예제 입력 정보를 설명하세요\"\n                value={submitData.judge_data[i].output}\n                onChange={(e) =>\n                  setSubminData({\n                    ...submitData,\n                    judge_data: [\n                      ...submitData.judge_data.slice(0, i),\n                      { output: e.target.value, input: submitData.judge_data[i].input },\n                      ...submitData.judge_data.slice(i + 1),\n                    ],\n                  })\n                }\n              ></textarea>\n            </div>\n          </div>\n        </div>\n      ))}\n      <div className=\"buttons is-centered\">\n        <button\n          className=\"button is-success\"\n          onClick={() =>\n            setSubminData({ ...submitData, judge_data: [...submitData.judge_data, { input: \"\", output: \"\" }] })\n          }\n        >\n          채점 데이터 추가\n        </button>\n        <button\n          className=\"button is-danger\"\n          onClick={() => setSubminData({ ...submitData, judge_data: [...submitData.judge_data.slice(0, -1)] })}\n        >\n          채점 데이터 삭제\n        </button>\n      </div>\n\n      <div className=\"buttons is-centered\">\n        <button className=\"button is-info\" onClick={() => submit()}>\n          제출\n        </button>\n      </div>\n    </Layout>\n  )\n  if (message === \"success\") {\n    return make()\n  } else\n    return (\n      <Layout>\n        <div className=\"columns\" style={{ marginTop: 20 }}>\n          <div className=\"column is-offset-2-tablet is-8-tablet\">\n            <div className=\"box\">{message === \"\" ? \"로딩 중입니다..\" : message}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n}\n\nexport default ProblemCreate\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom'\n\nimport Main from './Page/Main'\nimport MyPage from './Page/MyPage'\nimport Problem from './Page/Problem'\nimport ProblemList from './Page/ProblemList'\nimport Login from './Page/Login'\nimport Join from './Page/Join'\nimport ProblemCreate from './Page/ProblemCreate'\n\nimport './lib/myBulma.scss'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path='/' component={Main}></Route>\n      <Route path='/mypage' component={MyPage}></Route>\n      <Route path='/problem/:id' component={Problem}></Route>\n      <Route path='/problemlist' component={ProblemList}></Route>\n      <Route path='/login' component={Login}></Route>\n      <Route path='/join' component={Join}></Route>\n      <Route path='/problemcreate' component={ProblemCreate}></Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nimport { CookiesProvider } from \"react-cookie\"\n\nimport \"./lib/normalize.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookiesProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}